// #version 450
// layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

// layout(push_constant) uniform PushConstants {
//     uint num_elements;
// } pc;

// layout(set = 0, binding = 0) buffer DataIn {
//     uint data_in[];
// };

// layout(set = 0, binding = 1) buffer DataOut {
//     uint data_out[];
// };

// shared uint shared_data[256];

// void main() {
//     uint idx = gl_LocalInvocationID.x;
    
//     // Load data into shared memory
//     if (idx < pc.num_elements) {
//         shared_data[idx] = data_in[idx];
//     } else {
//         shared_data[idx] = 0;
//     }
    
//     barrier();
//     memoryBarrierShared();

//     // Parallel prefix sum algorithm
//     for (uint stride = 1; stride < 256; stride *= 2) {
//         if (idx >= stride) {
//             shared_data[idx] += shared_data[idx - stride];
//         }
//         barrier();
//         memoryBarrierShared();
//     }

//     // Write results to output buffer
//     if (idx < pc.num_elements) {
//         data_out[idx] = shared_data[idx];
//     }
// }

// ----------------------------------------------------------------------------

// #version 450
// layout(local_size_x = 256) in;

// layout(push_constant) uniform PushConstants {
//     uint g_num_elements;
// } pc;

// layout(binding = 0) buffer DataIn { uint data_in[]; };
// layout(binding = 1) buffer DataOut { uint data_out[]; };

// shared uint shared_data[256];

// void main() {
//     uint gidx = gl_GlobalInvocationID.x;
//     uint lidx = gl_LocalInvocationID.x;

//     // Load data into shared memory
//     shared_data[lidx] = (gidx < pc.g_num_elements) ? data_in[gidx] : 0;
//     barrier();

//     // Workgroup-local prefix sum
//     for (uint stride = 1; stride < 256; stride *= 2) {
//         if (lidx >= stride) {
//             shared_data[lidx] += shared_data[lidx - stride];
//         }
//         barrier();
//     }

//     // Write results to global memory
//     if (gidx < pc.g_num_elements) {
//         data_out[gidx] = shared_data[lidx];
//     }
// }

// ----------------------------------------------------------------------------

#version 450
layout(local_size_x = 256) in;

layout(push_constant) uniform PushConstants {
    uint num_elements;
} pc;

layout(binding = 0) buffer DataIn { uint data_in[]; };
layout(binding = 1) buffer DataOut { uint data_out[]; };
layout(binding = 2) buffer BlockSums { uint block_sums[]; }; // Add this buffer

shared uint shared_data[256];

void main() {
    uint gidx = gl_GlobalInvocationID.x;
    uint lidx = gl_LocalInvocationID.x;
    uint wgid = gl_WorkGroupID.x;

    // Load data into shared memory
    shared_data[lidx] = (gidx < pc.num_elements) ? data_in[gidx] : 0;
    barrier();

    // Local prefix sum
    for (uint stride = 1; stride < 256; stride *= 2) {
        if (lidx >= stride) {
            shared_data[lidx] += shared_data[lidx - stride];
        }
        barrier();
    }

    // Store local block sum
    if (lidx == 255) {
        block_sums[wgid] = shared_data[255];
    }

    // Write local prefix sum to global memory
    if (gidx < pc.num_elements) {
        data_out[gidx] = shared_data[lidx];
    }
}